name: deploy

on:
  pull_request:
  schedule:
    - cron:  '15 6 * * *'
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v21
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - run: nix eval -f default.nix 'lib'
      - run: nix eval -f default.nix 'modules'
      - run: nix eval -f default.nix 'overlays'
      - run: nix flake check --verbose --print-build-logs
      - run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
      - run: nix-env -f . -qa \* --meta --allowed-uris https://static.rust-lang.org --option restrict-eval true --option allow-import-from-derivation true --drv-path --show-trace -I nixpkgs=$(nix-instantiate --find-file nixpkgs) -I $PWD --json | jq -r 'values | .[].name'
  build:
    needs: check
    strategy:
      matrix:
        nixPath:
          - nixpkgs=channel:nixos-unstable
          - nixpkgs=channel:nixpkgs-unstable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v21
      with:
        nix_path: "${{ matrix.nixPath }}"
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v12
      with:
        name: infinitivewitch
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        extraPullNames: nix-community
    - run: nix flake archive --json | jq -r '.path,(.inputs|to_entries[].value.path)'
    - run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs
    - run: curl -XPOST "https://nur-update.nix-community.org/update?repo=infinitivewitch"
